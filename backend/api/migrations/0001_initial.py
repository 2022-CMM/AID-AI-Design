# Generated by Django 3.2 on 2022-02-19 11:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='goods_design',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='ai_designs')),
                ('image_selected', models.CharField(blank=True, db_column='image_selected', max_length=100)),
                ('created_at', models.DateTimeField(auto_now=True, db_column='created_at', max_length=100)),
                ('delete_flag', models.CharField(blank=True, db_column='delete_flag', max_length=100)),
            ],
            options={
                'db_table': 'goods_design',
            },
        ),
        migrations.CreateModel(
            name='goods_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='upload_image')),
                ('image_results', models.ImageField(blank=True, null=True, upload_to='results')),
                ('purchased_date', models.DateTimeField(blank=True, db_column='purchased_date', max_length=100)),
                ('deadline', models.DateTimeField(blank=True, db_column='deadline', max_length=100, null=True)),
                ('goods_type', models.CharField(blank=True, db_column='goods_type', max_length=100)),
                ('size', models.CharField(blank=True, db_column='size', max_length=100)),
                ('title', models.CharField(blank=True, db_column='title', max_length=100)),
                ('style', models.CharField(blank=True, db_column='style', max_length=100)),
                ('title_changed', models.CharField(blank=True, db_column='title_changed', max_length=100)),
                ('designer', models.CharField(blank=True, db_column='designer', max_length=100)),
                ('transform_flag', models.CharField(blank=True, db_column='transform_flag', default='1', max_length=100)),
                ('created_at', models.DateTimeField(auto_now=True, db_column='created_at', max_length=100)),
                ('delete_flag', models.CharField(blank=True, db_column='delete_flag', max_length=100)),
                ('user', models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'db_table': 'goods_info',
            },
        ),
        migrations.CreateModel(
            name='request_list',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, db_column='title', max_length=100)),
                ('contents', models.CharField(blank=True, db_column='contents', max_length=100)),
                ('designer', models.CharField(blank=True, db_column='designer', max_length=100)),
                ('created_at', models.DateTimeField(blank=True, db_column='created_at', max_length=100)),
                ('updated_at', models.DateTimeField(blank=True, db_column='updated_at', max_length=100)),
                ('delete_flag', models.CharField(blank=True, db_column='delete_flag', max_length=100)),
                ('public_flag', models.CharField(blank=True, db_column='public_flag', max_length=100)),
                ('goods', models.OneToOneField(default='1', on_delete=django.db.models.deletion.CASCADE, related_name='goods_info', to='api.goods_info')),
            ],
            options={
                'db_table': 'request_list',
            },
        ),
        migrations.CreateModel(
            name='goods_result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designer', models.IntegerField(blank=True, db_column='designer')),
                ('image', models.ImageField(blank=True, null=True, upload_to='result')),
                ('title_new', models.CharField(blank=True, db_column='title_new', max_length=100)),
                ('description', models.CharField(blank=True, db_column='description', max_length=100)),
                ('created_at', models.DateTimeField(auto_now=True, db_column='created_at', max_length=100)),
                ('delete_flag', models.CharField(blank=True, db_column='delete_flag', max_length=100)),
                ('ai_design', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='goods_result', to='api.goods_design')),
            ],
            options={
                'db_table': 'goods_result',
            },
        ),
        migrations.AddField(
            model_name='goods_design',
            name='info',
            field=models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to='api.goods_info', verbose_name='info'),
        ),
        migrations.CreateModel(
            name='comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(blank=True, db_column='user', max_length=100)),
                ('comment', models.CharField(blank=True, db_column='comment', max_length=100)),
                ('created_at', models.DateTimeField(blank=True, db_column='created_at', max_length=100)),
                ('updated_at', models.DateTimeField(blank=True, db_column='updated_at', max_length=100)),
                ('delete_flag', models.CharField(blank=True, db_column='delete_flag', max_length=100)),
                ('board', models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to='api.request_list', verbose_name='board')),
            ],
            options={
                'db_table': 'comment',
            },
        ),
    ]
